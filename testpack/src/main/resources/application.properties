### Target server configuration setup
#
tgt.urlRoot="http://192.168.2.115:8000/v0.5.1/"

# map message to resource path, per the IDL comments
# searchAlleleCalls = "allelecalls/search"
searchReads = "reads/search"
searchReadGroupSets = "readgroupsets/search"
# getReadGroupSet = "readgroupsets/{id}"
# getReferences = "references/{id}"
# getReferencesBases = "references/{id}/bases"
# searchReferences = "references/search"
# getReferencesets = "referencesets/{id}"
searchReferencesets = "referencesets/search"
# getReadGroup = "readgroups/{id}"
# searchDatasets = "datasets/search"
# getDataset = "datasets/{id}"
searchVariantSets = "variantsets/search"
# getVariantSet = "variantsets/{id}"
searchVariants = "variants/search"
# getVariant = "variants/{id}"
# searchAlleles = "alleles/search"
# getAllele = "alleles/{id}"
# getCallSet = "callsets/{id}"
searchCallsets = "callsets/search"
# searchCalls = "calls/search"

ctk.testproperty=Wayne
### Spring/framework control
#
# turn off the Spring cmd-line banner
spring.main.show-banner=false
# configure PropertiesLauncher to look in a 'lib' dir under the launch dir for test jars
# so if you launch using java -jar ... then the <CWD>/lib dir will be added to the classpath
loader.path=lib
# configure the logging framework to load a control file from the lib dir, if present
# (else will load from the resources path in the jar package)
logging.config=lib/log4j2.xml

### CTK control of what tests get executed
#
ctk.pattern.testclass=""
ctk.pattern.testsuite=""

# name of java package to scan for classes matching the patterns
ctk.testpackage="org.ga4gh.ctk.systests"

### CTK control of output

