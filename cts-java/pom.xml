<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>ctk-parent</artifactId>
        <groupId>org.ga4gh</groupId>
        <version>0.5.1-SNAPSHOT</version>
        <relativePath>../parent</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <name>CTS Java Server Tests</name>
    <description>Tests of the GA4GH Server API Compliance</description>
    <artifactId>cts-java</artifactId>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>org.ga4gh</groupId>
            <artifactId>ctk-cli</artifactId>
            <version>0.5.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.ga4gh</groupId>
            <artifactId>ctk-schemas</artifactId>
            <version>${ga4gh.schema.local.version}</version>
        </dependency>

        <!-- asserts, conditins, etc for the schema -->
        <dependency>
            <groupId>org.ga4gh</groupId>
            <artifactId>ctk-domain</artifactId>
            <version>0.5.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.ga4gh</groupId>
            <artifactId>ctk-transport</artifactId>
            <version>0.5.1-SNAPSHOT</version>
        </dependency>


        <!-- bring in the Spring stuff -->
        <dependency>
            <!-- The core Spring Boot starter, including
            auto-configuration support, logging and YAML -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <!-- std logging for Spring Boot is logback, but I
            want to use log4j2 in the CTK so we exclude the default logging
            here and add in log4j2 later -->
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- CTK uses log4j2, some of the tooling is more common than Logback -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <!-- Support for common test dependencies, including JUnit, Hamcrest
            and Mockito along with the spring-test module. -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>

        <!-- turn on @ConfigurationProcessor so we can have ctk.* automatic naming -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- seems like we need the junit3 ant-junit, as well as the junit4! -->
<!--        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-junit4</artifactId>
        </dependency>
        -->
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
        </dependency>
        <dependency>
            <groupId>com.googlecode.junit-toolbox</groupId>
            <artifactId>junit-toolbox</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
        </dependency>

        <!-- need BCEL during site build -->
        <dependency>
            <groupId>org.apache.bcel</groupId>
            <artifactId>bcel</artifactId>
        </dependency>
        <dependency>
            <groupId>com.mashape.unirest</groupId>
            <artifactId>unirest-java</artifactId>
            <version>${unirest-java.version}</version>
        </dependency>

        <!-- bring in useful @Lggable aspect -->
        <!-- except it's not working -->

       <!-- <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-aspects</artifactId>
            <version>0.22</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.6.12</version>
            <scope>runtime</scope>
        </dependency>-->
    </dependencies>

    <!-- for the jcabi maven plugin -->
    <pluginRepositories>
        <pluginRepository>
            <id>oss.sonatype.org</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <plugins>
            <!-- weave in the JCABI aspects -->
            <!-- taking this out, since it doesn't seem to work,
            but leaving the commented block while I work on it -->
<!--            <plugin>
                <groupId>com.jcabi</groupId>
                <artifactId>jcabi-maven-plugin</artifactId>
                <version>1.0-SNAPSHOT</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>ajc</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin> <!-- spring boot brings this in, too, but I need to exclude the systests -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <useFile>false</useFile>
                                        <includes>
                        <include>**/*Spec.java</include>
                        <include>**/*Test.java</include>
                    </includes>
                    <excludes>
                        <!-- surefire for unit tests, so skip the integration tests -->
                        <!-- they will be run by the 'failsafe' plugin -->
                        <exclude>**/*IT.*</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <!-- accept default config naming patterns, *IT || IT* -->
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <argLine>-Dctk.tgt.urlRoot=${ctk.tgt.urlRoot}</argLine>
                            <properties>
                                <property>
                                    <!-- hook in the TAP framework for future reporting integration -->
                                    <name>listener</name>
                                    <value>
                                        org.tap4j.ext.junit.listener.TapListenerClass,org.tap4j.ext.junit.listener.TapListenerSuite
                                    </value>
                                </property>
                                <systemPropertyVariables>
                                    <tap.junit.results>target/tap4j/</tap.junit.results>
                                </systemPropertyVariables>
                            </properties>
                            <encoding>UTF-8</encoding>
                            <!-- disable forking for easy debugging -->
                            <!-- TODO make a mvn profile 'devel' for this, enable parallel in prod -->
                            <forkCount>0</forkCount>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>

                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.18.1</version>
                <reportSets>
                    <reportSet>
                        <!-- report on the 'failsafe' integration tests -->
                        <!-- assembles the reports, doesn't run the tests! -->
                        <id>integration-tests</id>
                        <reports>
                            <report>
                                failsafe-report-only
                            </report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

</project>