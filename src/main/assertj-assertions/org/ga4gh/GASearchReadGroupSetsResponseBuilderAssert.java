package org.ga4gh;

/**
 * {@link GASearchReadGroupSetsResponse.Builder} specific assertions - Generated by CustomAssertionGenerator.
 */
public class GASearchReadGroupSetsResponseBuilderAssert extends AbstractAssert<GASearchReadGroupSetsResponseBuilderAssert, GASearchReadGroupSetsResponse.Builder> {

  /**
   * Creates a new <code>{@link GASearchReadGroupSetsResponseBuilderAssert}</code> to make assertions on actual GASearchReadGroupSetsResponse.Builder.
   * @param actual the GASearchReadGroupSetsResponse.Builder we want to make assertions on.
   */
  public GASearchReadGroupSetsResponseBuilderAssert(GASearchReadGroupSetsResponse.Builder actual) {
    super(actual, GASearchReadGroupSetsResponseBuilderAssert.class);
  }

  /**
   * An entry point for GASearchReadGroupSetsResponseBuilderAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myGASearchReadGroupSetsResponse.Builder)</code> and get specific assertion with code completion.
   * @param actual the GASearchReadGroupSetsResponse.Builder we want to make assertions on.
   * @return a new <code>{@link GASearchReadGroupSetsResponseBuilderAssert}</code>
   */
  public static GASearchReadGroupSetsResponseBuilderAssert assertThat(GASearchReadGroupSetsResponse.Builder actual) {
    return new GASearchReadGroupSetsResponseBuilderAssert(actual);
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsResponse.Builder's nextPageToken is equal to the given one.
   * @param nextPageToken the given nextPageToken to compare the actual GASearchReadGroupSetsResponse.Builder's nextPageToken to.
   * @return this assertion object.
   * @throws AssertionError - if the actual GASearchReadGroupSetsResponse.Builder's nextPageToken is not equal to the given one.
   */
  public GASearchReadGroupSetsResponseBuilderAssert hasNextPageToken(String nextPageToken) {
    // check that actual GASearchReadGroupSetsResponse.Builder we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting nextPageToken of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";
    
    // null safe check
    String actualNextPageToken = actual.getNextPageToken();
    if (!Objects.areEqual(actualNextPageToken, nextPageToken)) {
      failWithMessage(assertjErrorMessage, actual, nextPageToken, actualNextPageToken);
    }

    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsResponse.Builder's readGroupSets contains the given GAReadGroupSet elements.
   * @param readGroupSets the given elements that should be contained in actual GASearchReadGroupSetsResponse.Builder's readGroupSets.
   * @return this assertion object.
   * @throws AssertionError if the actual GASearchReadGroupSetsResponse.Builder's readGroupSets does not contain all given GAReadGroupSet elements.
   */
  public GASearchReadGroupSetsResponseBuilderAssert hasReadGroupSets(GAReadGroupSet... readGroupSets) {
    // check that actual GASearchReadGroupSetsResponse.Builder we want to make assertions on is not null.
    isNotNull();

    // check that given GAReadGroupSet varargs is not null.
    if (readGroupSets == null) failWithMessage("Expecting readGroupSets parameter not to be null.");
    
    // check with standard error message, to set another message call: info.overridingErrorMessage("my error message");
    Iterables.instance().assertContains(info, actual.getReadGroupSets(), readGroupSets);

    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsResponse.Builder's readGroupSets contains <b>only<b> the given GAReadGroupSet elements and nothing else in whatever order.
   * @param readGroupSets the given elements that should be contained in actual GASearchReadGroupSetsResponse.Builder's readGroupSets.
   * @return this assertion object.
   * @throws AssertionError if the actual GASearchReadGroupSetsResponse.Builder's readGroupSets does not contain all given GAReadGroupSet elements.
   */
  public GASearchReadGroupSetsResponseBuilderAssert hasOnlyReadGroupSets(GAReadGroupSet... readGroupSets) {
    // check that actual GASearchReadGroupSetsResponse.Builder we want to make assertions on is not null.
    isNotNull();

    // check that given GAReadGroupSet varargs is not null.
    if (readGroupSets == null) failWithMessage("Expecting readGroupSets parameter not to be null.");
    
    // check with standard error message, to set another message call: info.overridingErrorMessage("my error message");
    Iterables.instance().assertContainsOnly(info, actual.getReadGroupSets(), readGroupSets);

    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsResponse.Builder's readGroupSets does not contain the given GAReadGroupSet elements.
   *
   * @param readGroupSets the given elements that should not be in actual GASearchReadGroupSetsResponse.Builder's readGroupSets.
   * @return this assertion object.
   * @throws AssertionError if the actual GASearchReadGroupSetsResponse.Builder's readGroupSets contains any given GAReadGroupSet elements.
   */
  public GASearchReadGroupSetsResponseBuilderAssert doesNotHaveReadGroupSets(GAReadGroupSet... readGroupSets) {
    // check that actual GASearchReadGroupSetsResponse.Builder we want to make assertions on is not null.
    isNotNull();

    // check that given GAReadGroupSet varargs is not null.
    if (readGroupSets == null) failWithMessage("Expecting readGroupSets parameter not to be null.");
    
    // check with standard error message (use overridingErrorMessage before contains to set your own message).
    Iterables.instance().assertDoesNotContain(info, actual.getReadGroupSets(), readGroupSets);

    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsResponse.Builder has no readGroupSets.
   * @return this assertion object.
   * @throws AssertionError if the actual GASearchReadGroupSetsResponse.Builder's readGroupSets is not empty.
   */
  public GASearchReadGroupSetsResponseBuilderAssert hasNoReadGroupSets() {
    // check that actual GASearchReadGroupSetsResponse.Builder we want to make assertions on is not null.
    isNotNull();

    // we override the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting :\n  <%s>\nnot to have readGroupSets but had :\n  <%s>";
    
    // check
    if (actual.getReadGroupSets().iterator().hasNext()) {
      failWithMessage(assertjErrorMessage, actual, actual.getReadGroupSets());
    }
    
    // return the current assertion for method chaining
    return this;
  }
  

  /**
   * Verifies that the actual GASearchReadGroupSetsResponse.Builder has next page token.
   * @return this assertion object.
   * @throws AssertionError - if the actual GASearchReadGroupSetsResponse.Builder does not have next page token.
   */
  public GASearchReadGroupSetsResponseBuilderAssert hasNextPageToken() {
    // check that actual GASearchReadGroupSetsResponse.Builder we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.hasNextPageToken()) {
      failWithMessage("\nExpecting that actual GASearchReadGroupSetsResponse.Builder has next page token but does not have.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsResponse.Builder does not have next page token.
   * @return this assertion object.
   * @throws AssertionError - if the actual GASearchReadGroupSetsResponse.Builder has next page token.
   */
  public GASearchReadGroupSetsResponseBuilderAssert doesNotHaveNextPageToken() {
    // check that actual GASearchReadGroupSetsResponse.Builder we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.hasNextPageToken()) {
      failWithMessage("\nExpecting that actual GASearchReadGroupSetsResponse.Builder does not have next page token but has.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsResponse.Builder has read group sets.
   * @return this assertion object.
   * @throws AssertionError - if the actual GASearchReadGroupSetsResponse.Builder does not have read group sets.
   */
  public GASearchReadGroupSetsResponseBuilderAssert hasReadGroupSets() {
    // check that actual GASearchReadGroupSetsResponse.Builder we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.hasReadGroupSets()) {
      failWithMessage("\nExpecting that actual GASearchReadGroupSetsResponse.Builder has read group sets but does not have.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsResponse.Builder does not have read group sets.
   * @return this assertion object.
   * @throws AssertionError - if the actual GASearchReadGroupSetsResponse.Builder has read group sets.
   */
  public GASearchReadGroupSetsResponseBuilderAssert doesNotHaveReadGroupSets() {
    // check that actual GASearchReadGroupSetsResponse.Builder we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.hasReadGroupSets()) {
      failWithMessage("\nExpecting that actual GASearchReadGroupSetsResponse.Builder does not have read group sets but has.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

}
