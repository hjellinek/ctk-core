package org.ga4gh;

import org.assertj.core.api.*;
import org.assertj.core.internal.*;
import org.assertj.core.util.*;

/**
 * {@link GASearchReadGroupSetsRequest} specific assertions - Generated by CustomAssertionGenerator.
 */
public class GASearchReadGroupSetsRequestAssert extends AbstractAssert<GASearchReadGroupSetsRequestAssert, GASearchReadGroupSetsRequest> {

  /**
   * Creates a new <code>{@link GASearchReadGroupSetsRequestAssert}</code> to make assertions on actual GASearchReadGroupSetsRequest.
   * @param actual the GASearchReadGroupSetsRequest we want to make assertions on.
   */
  public GASearchReadGroupSetsRequestAssert(GASearchReadGroupSetsRequest actual) {
    super(actual, GASearchReadGroupSetsRequestAssert.class);
  }

  /**
   * An entry point for GASearchReadGroupSetsRequestAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myGASearchReadGroupSetsRequest)</code> and get specific assertion with code completion.
   * @param actual the GASearchReadGroupSetsRequest we want to make assertions on.
   * @return a new <code>{@link GASearchReadGroupSetsRequestAssert}</code>
   */
  public static GASearchReadGroupSetsRequestAssert assertThat(GASearchReadGroupSetsRequest actual) {
    return new GASearchReadGroupSetsRequestAssert(actual);
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsRequest's classSchema is equal to the given one.
   * @param classSchema the given classSchema to compare the actual GASearchReadGroupSetsRequest's classSchema to.
   * @return this assertion object.
   * @throws AssertionError - if the actual GASearchReadGroupSetsRequest's classSchema is not equal to the given one.
   */
  public GASearchReadGroupSetsRequestAssert hasClassSchema(org.apache.avro.Schema classSchema) {
    // check that actual GASearchReadGroupSetsRequest we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting classSchema of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";
    
    // null safe check
    org.apache.avro.Schema actualClassSchema = actual.getClassSchema();
    if (!Objects.areEqual(actualClassSchema, classSchema)) {
      failWithMessage(assertjErrorMessage, actual, classSchema, actualClassSchema);
    }

    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsRequest's datasetIds contains the given String elements.
   * @param datasetIds the given elements that should be contained in actual GASearchReadGroupSetsRequest's datasetIds.
   * @return this assertion object.
   * @throws AssertionError if the actual GASearchReadGroupSetsRequest's datasetIds does not contain all given String elements.
   */
  public GASearchReadGroupSetsRequestAssert hasDatasetIds(String... datasetIds) {
    // check that actual GASearchReadGroupSetsRequest we want to make assertions on is not null.
    isNotNull();

    // check that given String varargs is not null.
    if (datasetIds == null) failWithMessage("Expecting datasetIds parameter not to be null.");
    
    // check with standard error message, to set another message call: info.overridingErrorMessage("my error message");
    Iterables.instance().assertContains(info, actual.getDatasetIds(), datasetIds);

    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsRequest's datasetIds contains <b>only<b> the given String elements and nothing else in whatever order.
   * @param datasetIds the given elements that should be contained in actual GASearchReadGroupSetsRequest's datasetIds.
   * @return this assertion object.
   * @throws AssertionError if the actual GASearchReadGroupSetsRequest's datasetIds does not contain all given String elements.
   */
  public GASearchReadGroupSetsRequestAssert hasOnlyDatasetIds(String... datasetIds) {
    // check that actual GASearchReadGroupSetsRequest we want to make assertions on is not null.
    isNotNull();

    // check that given String varargs is not null.
    if (datasetIds == null) failWithMessage("Expecting datasetIds parameter not to be null.");
    
    // check with standard error message, to set another message call: info.overridingErrorMessage("my error message");
    Iterables.instance().assertContainsOnly(info, actual.getDatasetIds(), datasetIds);

    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsRequest's datasetIds does not contain the given String elements.
   *
   * @param datasetIds the given elements that should not be in actual GASearchReadGroupSetsRequest's datasetIds.
   * @return this assertion object.
   * @throws AssertionError if the actual GASearchReadGroupSetsRequest's datasetIds contains any given String elements.
   */
  public GASearchReadGroupSetsRequestAssert doesNotHaveDatasetIds(String... datasetIds) {
    // check that actual GASearchReadGroupSetsRequest we want to make assertions on is not null.
    isNotNull();

    // check that given String varargs is not null.
    if (datasetIds == null) failWithMessage("Expecting datasetIds parameter not to be null.");
    
    // check with standard error message (use overridingErrorMessage before contains to set your own message).
    Iterables.instance().assertDoesNotContain(info, actual.getDatasetIds(), datasetIds);

    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsRequest has no datasetIds.
   * @return this assertion object.
   * @throws AssertionError if the actual GASearchReadGroupSetsRequest's datasetIds is not empty.
   */
  public GASearchReadGroupSetsRequestAssert hasNoDatasetIds() {
    // check that actual GASearchReadGroupSetsRequest we want to make assertions on is not null.
    isNotNull();

    // we override the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting :\n  <%s>\nnot to have datasetIds but had :\n  <%s>";
    
    // check
    if (actual.getDatasetIds().iterator().hasNext()) {
      failWithMessage(assertjErrorMessage, actual, actual.getDatasetIds());
    }
    
    // return the current assertion for method chaining
    return this;
  }
  

  /**
   * Verifies that the actual GASearchReadGroupSetsRequest's name is equal to the given one.
   * @param name the given name to compare the actual GASearchReadGroupSetsRequest's name to.
   * @return this assertion object.
   * @throws AssertionError - if the actual GASearchReadGroupSetsRequest's name is not equal to the given one.
   */
  public GASearchReadGroupSetsRequestAssert hasName(String name) {
    // check that actual GASearchReadGroupSetsRequest we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting name of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";
    
    // null safe check
    String actualName = actual.getName();
    if (!Objects.areEqual(actualName, name)) {
      failWithMessage(assertjErrorMessage, actual, name, actualName);
    }

    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsRequest's pageSize is equal to the given one.
   * @param pageSize the given pageSize to compare the actual GASearchReadGroupSetsRequest's pageSize to.
   * @return this assertion object.
   * @throws AssertionError - if the actual GASearchReadGroupSetsRequest's pageSize is not equal to the given one.
   */
  public GASearchReadGroupSetsRequestAssert hasPageSize(Integer pageSize) {
    // check that actual GASearchReadGroupSetsRequest we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting pageSize of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";
    
    // null safe check
    Integer actualPageSize = actual.getPageSize();
    if (!Objects.areEqual(actualPageSize, pageSize)) {
      failWithMessage(assertjErrorMessage, actual, pageSize, actualPageSize);
    }

    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsRequest's pageToken is equal to the given one.
   * @param pageToken the given pageToken to compare the actual GASearchReadGroupSetsRequest's pageToken to.
   * @return this assertion object.
   * @throws AssertionError - if the actual GASearchReadGroupSetsRequest's pageToken is not equal to the given one.
   */
  public GASearchReadGroupSetsRequestAssert hasPageToken(String pageToken) {
    // check that actual GASearchReadGroupSetsRequest we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting pageToken of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";
    
    // null safe check
    String actualPageToken = actual.getPageToken();
    if (!Objects.areEqual(actualPageToken, pageToken)) {
      failWithMessage(assertjErrorMessage, actual, pageToken, actualPageToken);
    }

    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual GASearchReadGroupSetsRequest's schema is equal to the given one.
   * @param schema the given schema to compare the actual GASearchReadGroupSetsRequest's schema to.
   * @return this assertion object.
   * @throws AssertionError - if the actual GASearchReadGroupSetsRequest's schema is not equal to the given one.
   */
  public GASearchReadGroupSetsRequestAssert hasSchema(org.apache.avro.Schema schema) {
    // check that actual GASearchReadGroupSetsRequest we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting schema of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";
    
    // null safe check
    org.apache.avro.Schema actualSchema = actual.getSchema();
    if (!Objects.areEqual(actualSchema, schema)) {
      failWithMessage(assertjErrorMessage, actual, schema, actualSchema);
    }

    // return the current assertion for method chaining
    return this;
  }





}
